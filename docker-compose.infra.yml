services:
  user-service-db:
    image: postgres:16-alpine
    container_name: user-service-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: userdb
    ports:
      - "5000:5432"
    volumes:
      # This 'userdb_data' is defined in docker-compose.base.yml
      - userdb_data:/var/lib/postgresql/data
    networks:
      - internal
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -h localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak-db:
    image: postgres:16-alpine
    container_name: keycloak-db
    environment:
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
      POSTGRES_DB: keycloak
    tmpfs:
      # IMPORTANT: You MUST run 'docker compose down' to destroy
      # the container and clear this data for a fresh import.
      - /var/lib/postgresql/data
    networks:
      - internal
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak -h localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6
    container_name: fortressbank-redis
    volumes:
      # This 'redis_data' is defined in docker-compose.base.yml
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - internal
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:20.0
    container_name: fortressbank-keycloak
    command: 
      - start-dev
      - --import-realm
      - --health-enabled=true
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL_HOST: keycloak-db
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8888
      KC_PROXY: edge
      KC_HOSTNAME_STRICT: "false"
      KC_HOSTNAME_STRICT_BACKCHANNEL: "false"
      KC_HOSTNAME_STRICT_HTTPS: "false"
    ports:
      - "8888:8080"
    volumes:
      - ./keycloak/realms:/opt/keycloak/data/import
      - ./keycloak/realms:/opt/keycloak/data/export
    depends_on:
      keycloak-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/8080"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 300s
    networks:
      - internal

  kong:
    build:
      context: ./kong
      dockerfile: Dockerfile
      tags:
        - fortressbank-kong:patched
    container_name: fortressbank-kong
    environment:
      KONG_DATABASE: "off"
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_PROXY_LISTEN: "0.0.0.0:8000"
      KONG_ADMIN_LISTEN: "0.0.0.0:8001"
      KONG_PLUGINS: "bundled,openid-connect"
      KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yml
      LUA_PATH: "/usr/local/share/lua/5.1/?.lua;/usr/local/share/lua/5.1/?/init.lua;;"
      KONG_LOG_LEVEL: debug
    ports:
      - "8000:8000"
      - "8001:8001"
    volumes:
      - ./kong/kong.yml:/usr/local/kong/declarative/kong.yml
    depends_on:
      keycloak:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 2s
      retries: 10
      start_period: 20s
    networks:
      - internal